image: docker

services:
  - name: docker:dind
    command: [ "--insecure-registry=211.37.173.7:5000" ]

stages:
  - build
  - deploy

variables:
  APP_NAME: backend-nodejs
  CI_REGISTRY_IMAGE: backend/$APP_NAME
  CI_REGISTRY_USER: $GIT_ID
  CI_REGISTRY_PASSWORD: $GIT_PW
  CI_REGISTRY_URL: 211.37.173.7:5000
  CD_GIT_REPOSITORY: 211.37.173.7:8088/root/$CD_CHART_REPO.git
  CD_CHART_REPO: backend-nodejs-chart
  CD_MANIFEST_FILE: Chart.yaml
  TAG: latest

before_script:
  - docker login $CI_REGISTRY_URL -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD

init-build:
  stage: build
  environment:
    name: development server
  script:
    - echo "Hello Init build!"

build-to-dev:
  stage: build
  environment:
    name: development server
  script:
    - docker build -t $CI_REGISTRY_URL/$CI_REGISTRY_IMAGE:1.0 .
    - docker rm -f backend-nodejs
    - docker run -d -p 8077:4000 --rm --name backend-nodejs $CI_REGISTRY_URL/$CI_REGISTRY_IMAGE:1.0

tag_latest_image:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - docker tag $CI_REGISTRY_URL/$CI_REGISTRY_IMAGE:1.0 $CI_REGISTRY_URL/$CI_REGISTRY_IMAGE:latest
    - docker image rm $CI_REGISTRY_URL/$CI_REGISTRY_IMAGE:1.0
    - docker push $CI_REGISTRY_URL/$CI_REGISTRY_IMAGE:latest

deploy-to-build:
  stage: deploy
  environment:
    name: development server
  script:
    - echo "Hello deploy finish!"
